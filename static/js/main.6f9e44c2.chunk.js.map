{"version":3,"sources":["services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/SectionTitle/SectionTitle.styled.jsx","components/SectionTitle/SectionTitle.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsAPI","contacts","newContact","deletedContact","filterContacts","createAction","createReducer","fulfilled","_state","payload","state","find","name","toLowerCase","alert","number","filter","isLoading","pending","rejected","error","contactsActions","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","Title","styled","h2","SectionTitle","title","children","FormContact","form","FormInput","input","FormButton","button","ContactForm","dispatch","useDispatch","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","e","preventDefault","type","pattern","required","onChange","getContacts","getLoading","getFilter","getError","getVisibleContacts","createSelector","normalizedFilter","includes","Label","label","Filter","useSelector","contactsSelectors","target","onBlur","List","ol","ListItem","li","ButtonDelete","Span","span","ContactList","useEffect","contactsOperations","map","onClick","onDeleteContact","Container","div","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f9e44c2.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get('/contacts');\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post('/contacts', contact);\n  return data;\n}\n\nexport async function deleteContact(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n  return data;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactsAPI from 'services/contacts-api';\n// import * as contactsActions from './contacts-actions';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsAPI.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const newContact = await contactsAPI.addContact(contact);\n      return newContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      const deletedContact = await contactsAPI.deleteContact(id);\n      return deletedContact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\n// export const fetchContacts = () => async dispatch => {\n//   dispatch(contactsActions.fetchContactsRequest());\n\n//   try {\n//     const contacts = await contactsAPI.fetchContacts();\n//     dispatch(contactsActions.fetchContactsSuccess(contacts));\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error));\n//   }\n// };\n","import { createAction } from '@reduxjs/toolkit';\n// import { v4 as uuidv4 } from 'uuid';\n\nexport const filterContacts = createAction('filter/filterContact');\n\n// export const fetchContactsRequest = createAction('contactList/fetchContactsRequest');\n// export const fetchContactsSuccess = createAction('contactList/fetchContactsSuccess');\n// export const fetchContactsError = createAction('contactList/fetchContactsError');\n\n// export const addContact = createAction('contacts/addContact', (name, number) => {\n//   return {\n//     payload: {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     },\n//   };\n// });\n\n// export const deleteContact = createAction('contactList/deleteContact');\n// export const filterContacts = createAction('filter/filterContact');\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { fetchContacts, addContact, deleteContact } from './contacts-operations';\nimport * as contactsActions from './contacts-actions';\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_state, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => {\n    if (state.find(contact => contact.name.toLowerCase() === payload.name.toLowerCase())) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    if (state.find(contact => contact.number === payload.number)) {\n      alert(`${payload.number} is already in contacts`);\n      return state;\n    }\n    return [payload, ...state];\n  },\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_state, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n  [addContact.rejected]: (_state, { payload }) => payload,\n  [addContact.pending]: null,\n  [deleteContact.rejected]: (_state, { payload }) => payload,\n  [deleteContact.pending]: null,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  isLoading,\n  error,\n});\n\n// const contacts = createReducer(\n//   [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n//   {\n//     [actions.addContact]: (state, { payload }) => {\n//       const contactName = state.find(\n//         contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n//       );\n//       const contactNumber = state.find(contact => contact.number === payload.number);\n//       if (contactName) {\n//         alert(`${payload.name} is already in contacts`);\n//         return state;\n//       }\n//       if (contactNumber) {\n//         alert(`${payload.number} is already in contacts`);\n//         return state;\n//       }\n//       return [payload, ...state];\n//     },\n//     [actions.deleteContact]: (state, { payload }) =>\n//       state.filter(contact => contact.id !== payload),\n//   },\n// );\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactReducer from '../redux/contacts/contacts-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  text-align: left;\r\n  text-transform: uppercase;\r\n`;","import React from 'react';\r\nimport { Title } from './SectionTitle.styled';\r\n\r\nexport default function SectionTitle ({title, children}) {\r\n    return (\r\n        <section>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const FormContact = styled.form`\r\n  @media screen and (max-width: 400px) {\r\n    max-width: 240px;\r\n  }\r\n  max-width: 300px;\r\n  padding: 10px;\r\n\r\n  background-color: #60a7e9;\r\n  border: 2px solid #083763;\r\n  border-radius: 5px;  \r\n  cursor: pointer;\r\n`;\r\n\r\nexport const FormInput = styled.input`  \r\n @media screen and (max-width: 400px){\r\n   /* width: 150px; */\r\n }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  @media screen and (max-width: 400px) {\r\n    font-size: small;\r\n  }\r\n  margin-top: 20px;\r\n  padding: 5px;\r\n\r\n  font-size: medium;\r\n  background-color: #156bbb;\r\n  border: 2px solid #10589b;\r\n  cursor: pointer;\r\n`;\r\n\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from 'redux/contacts/contacts-operations';\r\nimport { FormContact, FormButton, FormInput } from './ContactForm.styled';\r\n\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(addContact(name, number));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <FormContact onSubmit={handleSubmit}>\r\n            <label>\r\n                Name\r\n                <br />\r\n                <FormInput\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <br />            \r\n            <label> Number\r\n                <br />\r\n                <FormInput\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <br />\r\n            <FormButton type=\"submit\">\r\n                Add contact\r\n            </FormButton>         \r\n        </FormContact>\r\n    );\r\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getFilter = state => state.contacts.filter;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n});\n\n// выполнится, если изменится contacts или filter\n","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\n   font-weight: 500;\r\n`;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsSelectors } from 'redux/contacts';\r\nimport { filterContacts } from 'redux/contacts/contacts-actions';\r\nimport { Label } from './Filter.styled';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(contactsSelectors.getFilter);  \r\n\r\n  const changeFilter = e => {\r\n      dispatch(filterContacts(e.target.value));\r\n  };\r\n  \r\n  const onBlurHandler = () =>\r\n    dispatch(filterContacts(''));\r\n\r\n    return (\r\n        <Label>\r\n        Find contacts by name:\r\n        <br/>\r\n                <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={changeFilter}\r\n          onBlur={onBlurHandler}\r\n         />\r\n    </Label>\r\n    )     \r\n};  \r\n ","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ol`\r\n  max-width: 300px;\r\n  cursor: pointer;\r\n  padding-left: 5px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-bottom: 8px;\r\n\r\n  @media screen and (min-width: 400px) {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  } \r\n`;\r\n\r\nexport const ButtonDelete = styled.button`\r\n  margin-left: 8px;\r\n  \r\n  background-color: #e7b352;\r\n  border: 2px solid #e67e38;;\r\n  cursor: pointer; \r\n`;\r\n\r\nexport const Span = styled.span`\r\n  display: inline-block;\r\n`;\r\n\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { contactsOperations, contactsSelectors} from 'redux/contacts';\r\nimport { List, ListItem, ButtonDelete, Span } from './ContactList.styled';\r\n\r\n\r\nexport default function ContactList() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n    const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n    \r\n    useEffect(() => {\r\n        dispatch(contactsOperations.fetchContacts());\r\n    }, [dispatch]);\r\n  \r\n    return (\r\n        <List>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ListItem key={id}>\r\n                    <Span>{name}: </Span>\r\n                    <Span>{number} </Span>\r\n                    <ButtonDelete\r\n                        type=\"button\"\r\n                        onClick={() => onDeleteContact(id)}\r\n                    >\r\n                        Delete\r\n                    </ButtonDelete>\r\n                </ListItem>\r\n            ))}\r\n            </List>\r\n    );\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  @media screen and (max-width: 400px){\r\n    padding: 20px;\r\n  }\r\n  max-width: 300px;\r\n  margin-top: 20px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding: 50px;\r\n  background: linear-gradient(45deg, rgb(228, 235, 238), #1e7fda);\r\n  border-radius: 10px;\r\n  border: 2px solid #0f5597;\r\n`;","import SectionTitle from '../SectionTitle';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\nimport { Container } from './App.styled';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <SectionTitle title=\"Phonebook\">\r\n        <ContactForm />\r\n      </SectionTitle>\r\n      \r\n      <SectionTitle title=\"Contacts\">\r\n        <Filter/>\r\n        <ContactList/>\r\n      </SectionTitle>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}